{"mappings":"AAAA;AAEA,kBAAkB;AAClB,MAAM,SAAS;OAAI,SAAS,gBAAgB,CAAC;CAAS;AAEtD,OAAO,OAAO,CAAC,CAAC;IACd,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,MAAM,SAAS,CAAC,GAAG,CAAC;IACpB,MAAM,OAAO,GAAG,MAAM,EAAE;IAExB,MAAM,gBAAgB,MAAM,IAAI,CAC7B,KAAK,CAAC,IACN,GAAG,CAAC,CAAC;QACJ,IAAI,SAAS,KAAK,WAAW,IAC3B,OAAO,MAAM;QAGf,OAAO;IACT,GACC,IAAI,CAAC;IAER,MAAM,WAAW,GAAG;IAEpB,MAAM,UAAU,CAAC,YAAY,CAAC,OAAO;IAErC,MAAM,WAAW,GACf,cAAc,MAAM,CAAC,GAAG,WAAW,KACnC,cAAc,KAAK,CAAC,GAAG,WAAW;AACtC","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write code here\nconst inputs = [...document.querySelectorAll('input')];\n\ninputs.forEach((input) => {\n  const label = document.createElement('label');\n\n  label.classList.add('field-label');\n  label.htmlFor = input.id;\n\n  const formattedName = input.name\n    .split('')\n    .map((char) => {\n      if (char === char.toUpperCase()) {\n        return ' ' + char;\n      }\n\n      return char;\n    })\n    .join('');\n\n  label.textContent = formattedName;\n\n  input.parentNode.insertBefore(label, input);\n\n  input.placeholder =\n    formattedName.charAt(0).toUpperCase() +\n    formattedName.slice(1).toLowerCase();\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}